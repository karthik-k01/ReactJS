{"ast":null,"code":"var _jsxFileName = \"E:\\\\VS Code Editor\\\\programs\\\\BasicJavaScript\\\\React Projects\\\\ReactJS\\\\todolist\\\\src\\\\components\\\\ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container, InputGroup, Form, Card, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./ToDoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList() {\n  _s();\n\n  const [toDoList, setToDoList] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputTitle, setInputTitle] = useState(\"\");\n  const [inputDescription, setInputDescription] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\");\n  const current = new Date();\n  const date = `${current.getFullYear()}-${current.getDate()}-${current.getMonth() + 1}-`;\n\n  const addInput = () => {\n    if (inputName && inputTitle && inputDescription && inputDate) {\n      setToDoList([...toDoList, {\n        name: inputName,\n        title: inputTitle,\n        description: inputDescription,\n        date: inputDate\n      }]);\n      setInputName(\"\");\n      setInputTitle(\"\");\n      setInputDescription(\"\");\n      setInputDate(\"\");\n    }\n  };\n\n  const deleteToDo = inputIndex => {\n    setToDoList(toDoList.filter((toDo, index) => index !== inputIndex));\n  };\n\n  const EditToDo = inputIndex => {\n    setToDoList(toDoList.map((todo, index) => {\n      if (index === inputIndex) {\n        setInputName(todo.name);\n        setInputTitle(todo.title);\n        setInputDescription(todo.description);\n        setInputDate(todo.date);\n      }\n\n      return todo;\n    }));\n    setToDoList(toDoList.filter((toDo, index) => index !== inputIndex));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do-List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"Name\",\n        \"aria-describedby\": \"inputGroup-sizing-default\",\n        value: inputName,\n        onChange: e => setInputName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"Title\",\n        \"aria-describedby\": \"inputGroup-sizing-default\",\n        value: inputTitle,\n        onChange: e => setInputTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"Description\",\n        \"aria-describedby\": \"inputGroup-sizing-default\",\n        value: inputDescription,\n        onChange: e => setInputDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        \"aria-label\": \"Text input with dropdown button\",\n        type: \"date\",\n        value: inputDate,\n        onChange: e => setInputDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"dark\",\n      size: \"lg\",\n      onClick: () => addInput(),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), toDoList.map((toDo, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"outer-card\",\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h5\",\n        children: toDo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: toDo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: toDo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: `Start Date: ${date}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: `End Date: ${toDo.date}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outer-btn\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: () => EditToDo(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => deleteToDo(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"7ZHvRj/irZAIJAYKN1XcUX3HVW0=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","Container","InputGroup","Form","Card","Button","useState","ToDoList","toDoList","setToDoList","inputName","setInputName","inputTitle","setInputTitle","inputDescription","setInputDescription","inputDate","setInputDate","current","Date","date","getFullYear","getDate","getMonth","addInput","name","title","description","deleteToDo","inputIndex","filter","toDo","index","EditToDo","map","todo","e","target","value"],"sources":["E:/VS Code Editor/programs/BasicJavaScript/React Projects/ReactJS/todolist/src/components/ToDoList.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container, InputGroup, Form, Card, Button } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport \"./ToDoList.css\";\r\nfunction ToDoList() {\r\n  const [toDoList, setToDoList] = useState([\r\n  ]);\r\n\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputTitle, setInputTitle] = useState(\"\");\r\n  const [inputDescription, setInputDescription] = useState(\"\");\r\n  const [inputDate, setInputDate] = useState(\"\");\r\n\r\n  const current = new Date();\r\n  const date = `${current.getFullYear()}-${current.getDate()}-${\r\n    current.getMonth() + 1\r\n  }-`;\r\n\r\n  const addInput = () => {\r\n    if (inputName && inputTitle && inputDescription && inputDate) {\r\n      setToDoList([\r\n        ...toDoList,\r\n        {\r\n          name: inputName,\r\n          title: inputTitle,\r\n          description: inputDescription,\r\n          date: inputDate,\r\n        },\r\n      ]);\r\n      setInputName(\"\");\r\n      setInputTitle(\"\");\r\n      setInputDescription(\"\");\r\n      setInputDate(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteToDo = (inputIndex) => {\r\n    setToDoList(toDoList.filter((toDo, index) => index !== inputIndex));\r\n  };\r\n\r\n    const EditToDo = (inputIndex) => {\r\n        setToDoList(toDoList.map((todo, index) => {\r\n            if (index === inputIndex) {\r\n                setInputName(todo.name)\r\n                setInputTitle(todo.title)\r\n                setInputDescription(todo.description)\r\n                setInputDate(todo.date)\r\n            }\r\n            return todo\r\n        }))\r\n        setToDoList(toDoList.filter((toDo, index) => index !== inputIndex));\r\n  }\r\n  return (\r\n    <Container>\r\n      <h1>To-Do-List</h1>\r\n      {/* --------------NAME-------------------------------------------------------------------------- */}\r\n      <InputGroup className=\"mb-3\">\r\n        <Form.Control\r\n          placeholder=\"Name\"\r\n          aria-describedby=\"inputGroup-sizing-default\"\r\n          value={inputName}\r\n          onChange={(e) => setInputName(e.target.value)}\r\n        />\r\n      </InputGroup>\r\n\r\n      {/* -------------------TITLE--------------------------------------------------------------------------- */}\r\n      <InputGroup className=\"mb-3\">\r\n        <Form.Control\r\n          placeholder=\"Title\"\r\n          aria-describedby=\"inputGroup-sizing-default\"\r\n          value={inputTitle}\r\n          onChange={(e) => setInputTitle(e.target.value)}\r\n        />\r\n      </InputGroup>\r\n\r\n      {/* ------------------------DESCRIPTION------------------------------------------------------------------------------- */}\r\n      <InputGroup className=\"mb-3\">\r\n        <Form.Control\r\n          placeholder=\"Description\"\r\n          aria-describedby=\"inputGroup-sizing-default\"\r\n          value={inputDescription}\r\n          onChange={(e) => setInputDescription(e.target.value)}\r\n        />\r\n      </InputGroup>\r\n\r\n      {/* -----------------------------DATE---------------------------------------------------------------------------------------- */}\r\n      <InputGroup className=\"mb-3\">\r\n        <Form.Control\r\n          aria-label=\"Text input with dropdown button\"\r\n          type=\"date\"\r\n          value={inputDate}\r\n          onChange={(e) => setInputDate(e.target.value)}\r\n        />\r\n      </InputGroup>\r\n\r\n      <Button variant=\"dark\" size=\"lg\" onClick={() => addInput()}>\r\n        Add\r\n      </Button>\r\n\r\n      {/* ---------------------------CARD---------------------------------------------------------------------------------------- */}\r\n\r\n      {toDoList.map((toDo, index) => (\r\n        <Card key={index} className=\"outer-card\" md={4}>\r\n          <Card.Header as=\"h5\">{toDo.name}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>{toDo.title}</Card.Title>\r\n            <Card.Text>{toDo.description}</Card.Text>\r\n            <Card.Text>{`Start Date: ${date}`}</Card.Text>\r\n            <Card.Text>{`End Date: ${toDo.date}`}</Card.Text>\r\n            <div className=\"outer-btn\">\r\n              <Button variant=\"warning\" onClick={() => EditToDo(index)}>Edit</Button>\r\n              <Button variant=\"danger\" onClick={() => deleteToDo(index)}>\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}